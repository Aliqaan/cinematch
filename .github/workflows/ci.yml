name: Kotlin CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: --health-cmd "pg_isready -U postgres" --health-timeout 30s --health-retries 5v

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 21 (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: corretto

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant execute permission for Gradle wrapper
      - name: Make Gradle Executable
        run: chmod +x gradlew

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -U postgres -d test_db; do
            echo "Waiting for database to be ready..."
            sleep 2
          done

      # Build the project
      - name: Build
        run: ./gradlew build --no-daemon

      # Migration
      - name: Migrate
        run: ./gradlew flywayMigrate --no-daemon

      # Run tests
      - name: Test
        run: ./gradlew test --no-daemon

      # Run linting
      - name: Lint Code
        run: ./gradlew ktlintCheck
